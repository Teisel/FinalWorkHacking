package com.example.demo.service;import com.example.demo.entity.User;import com.example.demo.repository.UserRepository;import com.example.demo.service.UserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.Page;import org.springframework.data.domain.Pageable;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import java.util.List;import java.util.Optional;@Servicepublic class UserServiceImpl implements UserService{    @Autowired    private UserRepository userRepository;    public UserServiceImpl(){    }    @Transactional(            readOnly = true    )    public Iterable<User> findAll() {        return this.userRepository.findAll();    }    @Transactional(            readOnly = true    )    public Page<User> findAll(Pageable pageable) {        return this.userRepository.findAll(pageable);    }    @Transactional(            readOnly = true    )    public Optional<User> findById(Integer id) {        return this.userRepository.findById(id);    }    @Transactional    public User save(User us) {        return (User)this.userRepository.save(us) ;    }    @Transactional(            readOnly = true    )    public void deleteById(Integer id) {        this.userRepository.deleteById(id);    }    @Override    public List<User> searchUsers(String word) {        return this.userRepository.searchUsers(word);    }    @Override    public List<User> searchCompetitors(List<Integer> ids) {        return this.userRepository.searchCompetitors(ids);    }}